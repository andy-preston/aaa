import { docTest, expectFileContents } from "../assembler/doc-test.ts";

Deno.test("Relative Program Demo", () => {
    const demo = docTest();
    demo.mockUnsupportedDevice({
        "unsupportedInstructions": { "value": [] },
        "programMemoryBytes":      { "value": "0100" },
        "reducedCore":             { "value": false }
    });
    demo.source("", [
        '    {{ device("Fake Device"); }}',
        "back:",
        "    NOP",
        "    NOP",
        "    NOP",
        "    BRBC 5, back",
        "    BRBC 4, forward",
        "    BRBS 3, back",
        "    BRBS 2, forward",
        "    BRCC back",
        "    BRCC forward",
        "    BRCS back",
        "    BRCS forward",
        "    BREQ back",
        "    BREQ forward",
        "    BRGE back",
        "    BRGE forward",
        "    BRHC back",
        "    BRHC forward",
        "    BRHS back",
        "    BRHS forward",
        "    BRID back",
        "    BRID forward",
        "    BRIE back",
        "    BRIE forward",
        "    BRLO back",
        "    BRLO forward",
        "    BRLT back",
        "    BRLT forward",
        "    BRMI back",
        "    BRMI forward",
        "    BRNE back",
        "    BRNE forward",
        "    BRPL back",
        "    BRPL forward",
        "    BRSH back",
        "    BRSH forward",
        "    BRTC back",
        "    BRTC forward",
        "    BRTS back",
        "    BRTS forward",
        "    BRVC back",
        "    BRVC forward",
        "    BRVS back",
        "    BRVS forward",
        "    NOP",
        "    NOP",
        "    NOP",
        "forward:",
        "    NOP"
    ]);
    demo.assemble();
    expectFileContents(".lst").toEqual([
        "/var/tmp/demo.asm",
        "=================",
        '                      1     {{ device("Fake Device"); }}',
        "                      2 back:",
        "000000 00 00          3     NOP",
        "000001 00 00          4     NOP",
        "000002 00 00          5     NOP",
        "000003 F7 E5          6     BRBC 5, back",
        "000004 F5 4C          7     BRBC 4, forward",
        "000005 F3 D3          8     BRBS 3, back",
        "000006 F1 3A          9     BRBS 2, forward",
        "000007 F7 C0         10     BRCC back",
        "000008 F5 28         11     BRCC forward",
        "000009 F3 B0         12     BRCS back",
        "00000A F1 18         13     BRCS forward",
        "00000B F3 A1         14     BREQ back",
        "00000C F1 09         15     BREQ forward",
        "00000D F7 94         16     BRGE back",
        "00000E F4 FC         17     BRGE forward",
        "00000F F7 85         18     BRHC back",
        "000010 F4 ED         19     BRHC forward",
        "000011 F3 75         20     BRHS back",
        "000012 F0 DD         21     BRHS forward",
        "000013 F7 67         22     BRID back",
        "000014 F4 CF         23     BRID forward",
        "000015 F3 57         24     BRIE back",
        "000016 F0 BF         25     BRIE forward",
        "000017 F3 40         26     BRLO back",
        "000018 F0 A8         27     BRLO forward",
        "000019 F3 34         28     BRLT back",
        "00001A F0 9C         29     BRLT forward",
        "00001B F3 22         30     BRMI back",
        "00001C F0 8A         31     BRMI forward",
        "00001D F7 11         32     BRNE back",
        "00001E F4 79         33     BRNE forward",
        "00001F F7 02         34     BRPL back",
        "000020 F4 6A         35     BRPL forward",
        "000021 F6 F0         36     BRSH back",
        "000022 F4 58         37     BRSH forward",
        "000023 F6 E6         38     BRTC back",
        "000024 F4 4E         39     BRTC forward",
        "000025 F2 D6         40     BRTS back",
        "000026 F0 3E         41     BRTS forward",
        "000027 F6 C3         42     BRVC back",
        "000028 F4 2B         43     BRVC forward",
        "000029 F2 B3         44     BRVS back",
        "00002A F0 1B         45     BRVS forward",
        "00002B 00 00         46     NOP",
        "00002C 00 00         47     NOP",
        "00002D 00 00         48     NOP",
        "                     49 forward:",
        "00002E 00 00         50     NOP",
        "",
        "Symbol Table",
        "============",
        "",
        "back    | 0  | 0  | /var/tmp/demo.asm:2  | 20",
        "forward | 46 | 2E | /var/tmp/demo.asm:49 | 0"
    ]);
    expectFileContents(".hex").toEqual([
        ":020000020000FC",
        ":10000000000000000000E5F74CF5D3F33AF1C0F72B",
        ":1000100028F5B0F318F1A1F309F194F7FCF485F792",
        ":10002000EDF475F3DDF067F7CFF457F3BFF040F36D",
        ":10003000A8F034F39CF022F38AF011F779F402F778",
        ":100040006AF4F0F658F4E6F64EF4D6F23EF0C3F653",
        ":0E0050002BF4B3F21BF00000000000000000D3",
        ":00000001FF"
    ]);
});

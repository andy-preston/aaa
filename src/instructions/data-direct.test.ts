import { assertEquals, assertFalse } from "assert";
import { description, testEnvironment, testLine, type Tests } from "./testing.ts";
import { dataDirect } from "./data-direct.ts";

// The bytes for these tests were generated by the last version of GAVRAsm
// that I could get hold of.

const tests: Tests = [[
    ["", "LDS", ["R30",  "1024"]],
    [30, 1024], ["number", "number"],
    [0x91, 0xe0, 0x04, 0x00]
], [
    ["", "STS", ["4096", "R8"]],
    [4096, 8], ["number", "number"],
    [0x92, 0x80, 0x10, 0x00]
]];

const reducedCoreTests: Tests = [[
    ["", "LDS", ["R30", "120"]],
    [30, 120], ["number", "number"],
    [0xa7, 0xe8]
], [
    ["", "STS", ["126", "R18"]],
    [126, 18], ["number", "number"],
    [0xaf, 0x2e]
]];

Deno.test("Data Direct code generation", () => {
    for (const test of tests) {
        const environment = testEnvironment();
        environment.device.setName("test");
        environment.device.reducedCore(false);
        const translate = dataDirect(testLine(test[0], test[1], test[2]));
        const result = translate!(environment.device.public);
        assertFalse(result.failed());
        assertEquals(result.code, [test[3]], description(test));
    }
});

Deno.test("Data Direct (Reduced Core) code generation", () => {
    for (const test of reducedCoreTests) {
        const environment = testEnvironment();
        environment.device.setName("test");
        environment.device.reducedCore(true);
        const translate = dataDirect(testLine(test[0], test[1], test[2]));
        const result = translate!(environment.device.public);
        assertFalse(result.failed());
        assertEquals(result.code, [test[3]], description(test));
    }
});
